#include <bits/stdc++.h>

using namespace std;

void solution(string cadena){

    stack<char> st;
    bool es = true;
    char aux,c;
    // cout<<cadena<<endl;
    for(int i = 0; i < cadena.length();i++){
        c = cadena[i];
        if(c == 40 || c == 91 || c == 123)
            st.push(c);  
        else{
            if(!st.empty()){
                aux = st.top();

                if(aux == '(' && c != ')')es = false;
                if(aux == '[' && c != ']')es = false;
                if(aux == '{' && c != '}')es = false;
                st.pop();
            }
            else
                es = false;
        }

    }

    if(!st.empty())
        es = false;

    if(!es)
        cout<<"NO"<<endl;
    else
        cout<<"YES"<<endl;
                 

}

int main(){
    
    if(getenv("CP_IO")){
        freopen("input.in", "r", stdin);
        freopen("output.out", "w", stdout);
    }
    
    int n;
    string f;
    scanf("%d",&n);
    for (int i = 0; i < n; i++){
        cin>>f;
        solution(f);
        f.clear();
    }
    
    return 0;
}


// 6
// }][}}(}][))]
// [](){()}
// ()
// ({}([][]))[]()
// {)[](}]}]}))}(())(


/*
21
()[{}()]([[][]()[[]]]{()})([]()){[]{}}{{}}{}(){([[{}([]{})]])}
{][({(}]][[[{}]][[[())}[)(]([[[)][[))[}[]][()}))](]){}}})}[{]{}{((}]}{{)[{[){{)[]]}))]()]})))[
[)](][[([]))[)
]}]){[{{){
{[(}{)]]){(}}(][{{)]{[(((}{}{)}[({[}[}((}{()}[]})]}]]))((]][[{{}[(}})[){()}}{(}{{({{}[[]})]{((]{[){[
()}}[(}])][{]{()([}[}{}[{[]{]](]][[))(()[}(}{[{}[[]([{](]{}{[){()[{[{}}{[{()(()({}([[}[}[{(]})
){[])[](){[)}[)]}]]){](]()]({{)(]])(]{(}(}{)}])){[{}((){[({(()[[}](]})]}({)}{)]{{{
[(})])}{}}]{({[]]]))]})]
[{
{}([{()[]{{}}}])({})
{({}{[({({})([[]])}({}))({})]})}
()[]
{)[])}]){){]}[(({[)[{{[((]{()[]}][([(]}{](])()(}{(]}{})[)))[](){({)][}()((
[][(([{}])){}]{}[()]{([[{[()]({}[])()()}[{}][]]])}
(}]}
(([{()}]))[({[{}{}[]]{}})]{((){}{()}){{}}}{}{{[{[][]([])}[()({}())()({[]}{{[[]]([])}})()]]}}
[(([){[](}){){]]}{}([](([[)}[)})[(()[]){})}}]][({[}])}{(({}}{{{{])({]]}[[{{(}}][{)([)]}}
()()[()([{[()][]{}(){()({[]}[(((){(())}))]()){}}}])]
({)}]}[}]{({))}{)]()(](])})][(]{}{({{}[]{][)){}{}))]()}((][{]{]{][{}[)}}{)()][{[{{[[
)}(()[])(}]{{{}[)([})]()}()]}(][}{){}}})}({](){([()({{(){{
}([]]][[){}}[[)}[(}(}]{(}[{}][{}](}]}))]{][[}(({(]}[]{[{){{(}}[){[][{[]{[}}[)]}}]{}}(}


YES
NO
NO
NO
NO
NO
NO
NO
NO
YES
YES
YES
NO
YES
NO
YES
NO
YES
NO
NO
NO


*/